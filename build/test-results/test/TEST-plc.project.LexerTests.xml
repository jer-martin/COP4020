<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="plc.project.LexerTests" tests="28" skipped="0" failures="0" errors="0" timestamp="2022-09-20T19:35:48" hostname="Jeremys-MacBook-Air.local" time="0.38">
  <properties/>
  <testcase name="testException()" classname="plc.project.LexerTests" time="0.009"/>
  <testcase name="[1] Alphabetic, 'c', true" classname="plc.project.LexerTests" time="0.012"/>
  <testcase name="[2] Newline Escape, '\n', true" classname="plc.project.LexerTests" time="0.01"/>
  <testcase name="[3] Empty, '', false" classname="plc.project.LexerTests" time="0.01"/>
  <testcase name="[4] Multiple, 'abc', false" classname="plc.project.LexerTests" time="0.01"/>
  <testcase name="[1] Example 1, LET x = 5;, [IDENTIFIER=LET@0, IDENTIFIER=x@4, OPERATOR==@6, INTEGER=5@8, OPERATOR=;@9]" classname="plc.project.LexerTests" time="0.01"/>
  <testcase name="[2] Example 2, print(&quot;Hello, World!&quot;);, [IDENTIFIER=print@0, OPERATOR=(@5, STRING=&quot;Hello, World!&quot;@6, OPERATOR=)@21, OPERATOR=;@22]" classname="plc.project.LexerTests" time="0.009"/>
  <testcase name="[1] Character, (, true" classname="plc.project.LexerTests" time="0.009"/>
  <testcase name="[2] Comparison, !=, true" classname="plc.project.LexerTests" time="0.009"/>
  <testcase name="[3] Space,  , false" classname="plc.project.LexerTests" time="0.009"/>
  <testcase name="[4] Tab, &#9;, false" classname="plc.project.LexerTests" time="0.009"/>
  <testcase name="[1] Multiple Digits, 123.456, true" classname="plc.project.LexerTests" time="0.009"/>
  <testcase name="[2] Negative Decimal, -1.0, true" classname="plc.project.LexerTests" time="0.008"/>
  <testcase name="[3] Trailing Decimal, 1., false" classname="plc.project.LexerTests" time="0.009"/>
  <testcase name="[4] Leading Decimal, .5, false" classname="plc.project.LexerTests" time="0.01"/>
  <testcase name="[1] Single Digit, 1, true" classname="plc.project.LexerTests" time="0.009"/>
  <testcase name="[2] Multiple Digits, 12345, true" classname="plc.project.LexerTests" time="0.008"/>
  <testcase name="[3] Negative, -1, true" classname="plc.project.LexerTests" time="0.01"/>
  <testcase name="[4] Leading Zero, 01, false" classname="plc.project.LexerTests" time="0.009"/>
  <testcase name="[1] Empty, &quot;&quot;, true" classname="plc.project.LexerTests" time="0.008"/>
  <testcase name="[2] Alphabetic, &quot;abc&quot;, true" classname="plc.project.LexerTests" time="0.008"/>
  <testcase name="[3] Newline Escape, &quot;Hello,\nWorld&quot;, true" classname="plc.project.LexerTests" time="0.008"/>
  <testcase name="[4] Unterminated, &quot;unterminated, false" classname="plc.project.LexerTests" time="0.008"/>
  <testcase name="[5] Invalid Escape, &quot;invalid\escape&quot;, false" classname="plc.project.LexerTests" time="0.008"/>
  <testcase name="[1] Alphabetic, getName, true" classname="plc.project.LexerTests" time="0.008"/>
  <testcase name="[2] Alphanumeric, thelegend27, true" classname="plc.project.LexerTests" time="0.008"/>
  <testcase name="[3] Leading Hyphen, -five, false" classname="plc.project.LexerTests" time="0.008"/>
  <testcase name="[4] Leading Digit, 1fish2fish3fishbluefish, false" classname="plc.project.LexerTests" time="0.009"/>
  <system-out><![CDATA[Char located
first quote
non newline
about to take in last quote
last quote
Type emitted
Char located
first quote
Escape located
supported escape found
about to take in last quote
last quote
Type emitted
Char located
first quote
non newline
about to take in last quote
no closing quote found
Char located
first quote
non newline
about to take in last quote
no closing quote found
Identifier located
Identifier located
Operator located
Number located
No decimal point found
Operator located
Identifier located
Operator located
Operator located
Operator located
Operator located
Operator located
match double
Number located
Decimal point found
Number located
Decimal point found
Number located
Decimal point found
trailing decimal found
Operator located
Number located
No decimal point found
Number located
No decimal point found
Number located
No decimal point found
Number located
leading 0 found
No decimal point after leading zero found
Escape located
slash matched
supported escape found
Escape located
slash matched
unsupported escape
Identifier located
Identifier located
Operator located
Number located
No decimal point found
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
